To migrate data from previous version dump the data into the data folder
with the names mentioned below. Load the files in the following way:

1. Do this before installing the new version with >>> sh install_all.sh
2. python manage.py dumpdata dashboard --all --settings="geonition.***" > ../data/dashboard.json

STEP BY STEP:
1. git clone releases from github
2. sh install_all.sh --> installs django and everything
3. create a settings_<site>.py file for the site you are going to use
4. add to settings_<site>.py database, admins, debug, time_zone, language_code,
languages, MEDIA_ROOT, EMAIL_BACKEND and other email settings
5. If language not in Django-base languages set LOCALE_PATHS setting
6. copy gntimages (base images) to MEDIA_ROOT
7. set SPATIAL_REFERENCE_SYSTEM_ID to the right value (e.g. 3067)
8. Write a javascript file with your analytics script for the installation
9. set ANALYTICS_TEMPLATE to the template file where you have your analytics script
10. python manage.py syncdb --settings="geonition.settings_<site>" (run this command twice, as the views of geodjango models cannot be created with custom sql,
in django version 1.5 the python manage.py syncdb --no-initial-data can be used for the first run)
11. python manage.py collectstatic --settings="geonition.settings_<site>"
12. python manage.py test --settings="geonition.settings_<site>" #should pass all the tests

Finnish the migration steps:
3. Drop the rows in dashboard_project tooltip*
4. Add a new row in dashboard_project called modify_date with default now() and NOT NULL
5. Remove the default now() option
6. run python manage.py data_migrate <absolute path to data dump folder> --settings="<settings for site>"

And now everything should be up and running.

/* For the current release use these DB ALTER scripts */
geodjango-map-layers has gone trough major database schema change.
No DB ALTER script at the moment.
Best way to deal it is to drop following tables
Make notes of the current maps and layers
DROP TABLE maps_map_layers CASCADE;
DROP TABLE maps_layer CASCADE;
DROP TABLE maps_map CASCADE;

Questionnaire start and end dates are added to the geoforms application
DB ALTER commands
ALTER TABLE geoforms_questionnaire ADD COLUMN "start_date" date;
ALTER TABLE geoforms_questionnaire ADD COLUMN "end_date" date;
ALTER TABLE geoforms_questionnaire ADD COLUMN "map" varchar(50);

and run
python manage.py syncdb --settings="geonition.settings_<site>" to re-create necessary tables

Create maps and layers again from notes made before.
